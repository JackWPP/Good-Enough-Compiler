# C语言词法规则文件
# 格式: 正则表达式\tToken类型\t优先级
# 优先级越高越先匹配

# 预处理指令
#[^\n]*	PREPROCESSOR	10

# 注释
/\*[\s\S]*?\*/	COMMENT	10
//.*	COMMENT	10

# 字符串和字符字面量
"([^"\\]|\\.)*"	STRING_LITERAL	9
'([^'\\]|\\.)?'	CHAR_LITERAL	9

# 数字字面量
0[xX][0-9a-fA-F]+[lLuU]*	NUMBER	8
0[0-7]+[lLuU]*	NUMBER	8
\d+\.\d+[fFlL]?	NUMBER	8
\d+[lLuU]*	NUMBER	8

# 三字符运算符
<<=	LEFT_SHIFT_ASSIGN	7
>>=	RIGHT_SHIFT_ASSIGN	7

# 双字符运算符
\+\+	INCREMENT	7
--	DECREMENT	7
<<	LEFT_SHIFT	7
>>	RIGHT_SHIFT	7
<=	LESS_EQUAL	7
>=	GREATER_EQUAL	7
==	EQUAL_EQUAL	7
!=	NOT_EQUAL	7
&&	LOGICAL_AND	7
\|\|	LOGICAL_OR	7
\+=	PLUS_ASSIGN	7
-=	MINUS_ASSIGN	7
\*=	MULTIPLY_ASSIGN	7
/=	DIVIDE_ASSIGN	7
%=	MODULO_ASSIGN	7
&=	BITWISE_AND_ASSIGN	7
\|=	BITWISE_OR_ASSIGN	7
\^=	BITWISE_XOR_ASSIGN	7
->	ARROW	7

# 单字符运算符和分隔符
\+	PLUS	6
-	MINUS	6
\*	MULTIPLY	6
/	DIVIDE	6
%	MODULO	6
=	ASSIGN	6
<	LESS	6
>	GREATER	6
&	BITWISE_AND	6
\|	BITWISE_OR	6
\^	BITWISE_XOR	6
~	BITWISE_NOT	6
!	LOGICAL_NOT	6
\?	QUESTION	6
;	SEMICOLON	6
,	COMMA	6
\.	DOT	6
:	COLON	6
\(	LPAREN	6
\)	RPAREN	6
\[	LBRACKET	6
\]	RBRACKET	6
\{	LBRACE	6
\}	RBRACE	6

# 标识符（必须在关键字检查之后）
[a-zA-Z_][a-zA-Z0-9_]*	IDENTIFIER	5

# 空白字符
\n	NEWLINE	1
[ \t]+	WHITESPACE	1